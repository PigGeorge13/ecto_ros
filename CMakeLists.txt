cmake_minimum_required(VERSION 2.8)
project(ecto_ros)

find_package(ecto REQUIRED) #brings in rosbuild_lite

set(ECTO_ROS_VERSION 0.1.0)
set(ECTO_ROS_PREFIX ${PROJECT_NAME}-${ECTO_ROS_VERSION} CACHE PATH "Mangled prefixer" FORCE)
set(ECTO_ROS_INCLUDE_PREFIX include/${ECTO_ROS_PREFIX} CACHE PATH "Where ecto_ros include will live" FORCE)
set(ECTO_ROS_SHARE_PREFIX share/${ECTO_ROS_PREFIX} CACHE PATH "Where ecto_ros share will live" FORCE)

option(BUILD_ECTO_ROS "should I build ecto_ros" ON)
if (NOT BUILD_ECTO_ROS)
  message("Skipping build of ecto_ros because BUILD_ECTO_ROS is OFF")
  return()
endif()

if (NOT ROSPACK_EXECUTABLE)  # found in rosbuild_lite
  message("*** unable to find rospack... is your environment set correctly?")
  set (BUILD_ECTO_ROS OFF)
  return()
else()
  if(ROS_CONFIGURE_VERBOSE)
    message(STATUS "+ ROSPACK_EXE: ${ROSPACK_EXE}")
  endif() 
endif()

if (NOT ROS_PACKAGE_PATH)
  if ("$ENV{ROS_PACKAGE_PATH}" STREQUAL "")
    message("*** ROS_PACKAGE_PATH is not set... is your environment set correctly?")
    set (BUILD_ECTO_ROS OFF)
  else()
    set(ROS_PACKAGE_PATH "$ENV{ROS_PACKAGE_PATH}" CACHE STRING  "ros package path")
  endif()
else()
  if(ROS_CONFIGURE_VERBOSE)
    message(STATUS "+ ROS_PACKAGE_PATH: ${ROS_PACKAGE_PATH}")
  endif()  
endif()  

if (NOT ROS_ROOT)
  if ("$ENV{ROS_ROOT}" STREQUAL "")
    message("*** ROS_ROOT is not set... is your environment set correctly?")
    set (BUILD_ECTO_ROS OFF)
  else()
    set(ROS_ROOT "$ENV{ROS_ROOT}" CACHE STRING  "ros root")
  endif()
else()
  if(ROS_CONFIGURE_VERBOSE)
    message(STATUS "+ ROS_ROOT: ${ROS_ROOT}")
  endif()  
endif()  

if (NOT BUILD_ECTO_ROS)
  message("*** Disabling build of ecto_ros")
  return()
endif()

set(CMAKE_MODULE_PATH ${ecto_ros_SOURCE_DIR}/cmake)
set(LIBRARY_OUTPUT_PATH ${CMAKE_BINARY_DIR}/lib)

include_directories(${ecto_ros_SOURCE_DIR}/include)
add_subdirectory(include/ecto_ros)
add_subdirectory(src)
add_subdirectory(cmake)

option(BUILD_TEST "Build tests" ON)
if(BUILD_TEST)
  enable_testing()
  add_subdirectory(test)
endif()
